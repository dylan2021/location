import java.text.SimpleDateFormat

apply plugin: 'com.android.library'
//apply from: 'fat-aar.gradle'
android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
//    enforceUniquePackageName = false
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 2
        versionName "1.0.0"
    }
    useLibrary 'org.apache.http.legacy'
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //忽略引用包中的错误
    lintOptions {
        abortOnError false
    }
    productFlavors {
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    dexOptions {
        preDexLibraries false//打包有多个个dex文件,设备会报.NoClassDefFoundError
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'

    api 'com.android.support:multidex:1.0.3'
    api 'com.android.support:support-v4:28.0.0'
    api 'com.alibaba:fastjson:1.2.72'
    compileOnly files('libs/annotations.jar')
    compileOnly 'com.android.support:support-fragment:28.0.0'
}

def buildTime() {
    def df = new SimpleDateFormat("yyyyMMdd")
    df.setTimeZone(TimeZone.getDefault())
    return df.format(new Date())
}

task clearJar(type: Delete) {
    delete 'build/outputs/jar/mapsdk.zip'
}
//拷贝本工程包
task copyLoc(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('build/outputs/jar/')
    exclude('test/', 'BuildConfig.class', 'R.class')
    include('classes.jar')
    rename('classes.jar', 'mapsdk.zip')
}
//解压缩jar
task unzipclass(type: Copy) {
    from zipTree('build/outputs/jar/mapsdk.zip')
    into("build/outputs/class/")
}
//拷贝assets
task copyassets(type: Copy) {
    from('build/intermediates/bundles/release/assets/')
    into("build/outputs/class/assets/")
}
//重新打包
task makeMapJar(type: org.gradle.api.tasks.bundling.Jar) {
    //指定生成的jar名
    baseName 'SF_MapSDK_V1.7.0_' + buildTime()
    //从哪里打包class文件
    from('build/outputs/class/')
    //打包到jar后的目录结构
    into('/')
    //去掉不需要打包的目录和文件
    exclude('test/', 'com/sfmap/map/BuildConfig.class', 'R.class')
    //去掉R$开头的文件
    exclude { it.name.startsWith('R$'); }
}
makeMapJar.dependsOn(clearJar, build, copyLoc, unzipclass, copyassets)